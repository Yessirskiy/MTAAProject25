"""UserSettings, UserAddress, Notifications

Revision ID: 46858aec6abc
Revises: 56da4fac20a9
Create Date: 2025-04-06 18:43:34.603809

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '46858aec6abc'
down_revision: Union[str, None] = '56da4fac20a9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('phone_number', sa.String(), nullable=True))
    op.create_table('useraddresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('building', sa.String(), nullable=True),
    sa.Column('street', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('postal_code', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_useraddresses_id'), 'useraddresses', ['id'], unique=False)
    op.create_table('usersettings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('is_name_hidden', sa.Boolean(), nullable=True),
    sa.Column('is_phone_hidden', sa.Boolean(), nullable=True),
    sa.Column('is_email_hidden', sa.Boolean(), nullable=True),
    sa.Column('is_picture_hidden', sa.Boolean(), nullable=True),
    sa.Column('is_notification_allowed', sa.Boolean(), nullable=True),
    sa.Column('is_local_notification', sa.Boolean(), nullable=True),
    sa.Column('is_weekly_notification', sa.Boolean(), nullable=True),
    sa.Column('is_onchange_notification', sa.Boolean(), nullable=True),
    sa.Column('is_onreact_notification', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_usersettings_id'), 'usersettings', ['id'], unique=False)
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('report_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('note', sa.String(), nullable=True),
    sa.Column('sent_datetime', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('read_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['report_id'], ['reports.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('password', sa.TEXT(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('username', sa.TEXT(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'users', type_='unique')
    op.create_unique_constraint('users_username_key', 'users', ['username'])
    op.drop_column('users', 'deactivated_datetime')
    op.drop_column('users', 'created_datetime')
    op.drop_column('users', 'is_active')
    op.drop_column('users', 'picture_path')
    op.drop_column('users', 'hashed_password')
    op.drop_column('users', 'phone_number')
    op.drop_column('users', 'last_name')
    op.drop_column('users', 'first_name')
    op.add_column('reports', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('reports', sa.Column('longitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('reports', sa.Column('latitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('reports', sa.Column('address', sa.TEXT(), autoincrement=False, nullable=False))
    op.alter_column('reports', 'note',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('reports', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('reports', 'admin_note')
    op.drop_column('reports', 'published_datetime')
    op.drop_column('reports', 'report_datetime')
    op.drop_table('votes')
    op.drop_index(op.f('ix_reportphotos_id'), table_name='reportphotos')
    op.drop_table('reportphotos')
    op.drop_index(op.f('ix_reportaddresses_id'), table_name='reportaddresses')
    op.drop_table('reportaddresses')
    op.drop_index(op.f('ix_notifications_id'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_index(op.f('ix_usersettings_id'), table_name='usersettings')
    op.drop_table('usersettings')
    op.drop_index(op.f('ix_useraddresses_id'), table_name='useraddresses')
    op.drop_table('useraddresses')
    # ### end Alembic commands ###
