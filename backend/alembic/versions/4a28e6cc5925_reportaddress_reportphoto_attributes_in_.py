"""ReportAddress + ReportPhoto. Attributes in User, Vote, Report.

Revision ID: 4a28e6cc5925
Revises: cbe44c889bdd
Create Date: 2025-03-30 19:30:28.309910

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4a28e6cc5925'
down_revision: Union[str, None] = 'cbe44c889bdd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('reportaddresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('report_id', sa.Integer(), nullable=True),
    sa.Column('building', sa.String(), nullable=True),
    sa.Column('street', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('postal_code', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('latitude', sa.Numeric(precision=8, scale=6), nullable=True),
    sa.Column('longitude', sa.Numeric(precision=9, scale=6), nullable=True),
    sa.ForeignKeyConstraint(['report_id'], ['reports.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('report_id')
    )
    op.create_index(op.f('ix_reportaddresses_id'), 'reportaddresses', ['id'], unique=False)
    op.create_table('reportphotos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('report_id', sa.Integer(), nullable=True),
    sa.Column('filename_path', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['report_id'], ['reports.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reportphotos_id'), 'reportphotos', ['id'], unique=False)
    op.add_column('reports', sa.Column('report_datetime', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('reports', sa.Column('published_datetime', sa.DateTime(timezone=True), nullable=True))
    op.add_column('reports', sa.Column('admin_note', sa.Text(), nullable=True))
    op.alter_column('reports', 'note',
               existing_type=sa.TEXT(),
               nullable=False)
    op.drop_column('reports', 'created_at')
    op.drop_column('reports', 'longitude')
    op.drop_column('reports', 'latitude')
    op.drop_column('reports', 'address')
    op.add_column('users', sa.Column('first_name', sa.String(), nullable=False))
    op.add_column('users', sa.Column('last_name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('hashed_password', sa.String(), nullable=False))
    op.add_column('users', sa.Column('picture_path', sa.String(), nullable=True))
    op.add_column('users', sa.Column('created_datetime', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('users', sa.Column('deactivated_datetime', sa.DateTime(timezone=True), nullable=True))
    op.drop_constraint('users_username_key', 'users', type_='unique')
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'password')
    op.drop_column('users', 'username')
    op.add_column('votes', sa.Column('is_positive', sa.Boolean(), nullable=False))
    op.add_column('votes', sa.Column('created_datetime', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.drop_column('votes', 'created_at')
    op.drop_column('votes', 'is_helpful')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('votes', sa.Column('is_helpful', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('votes', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.drop_column('votes', 'created_datetime')
    op.drop_column('votes', 'is_positive')
    op.add_column('users', sa.Column('username', sa.TEXT(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('password', sa.TEXT(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.create_unique_constraint('users_username_key', 'users', ['username'])
    op.drop_column('users', 'deactivated_datetime')
    op.drop_column('users', 'created_datetime')
    op.drop_column('users', 'picture_path')
    op.drop_column('users', 'hashed_password')
    op.drop_column('users', 'last_name')
    op.drop_column('users', 'first_name')
    op.add_column('reports', sa.Column('address', sa.TEXT(), autoincrement=False, nullable=False))
    op.add_column('reports', sa.Column('latitude', sa.NUMERIC(precision=8, scale=6), autoincrement=False, nullable=True))
    op.add_column('reports', sa.Column('longitude', sa.NUMERIC(precision=9, scale=6), autoincrement=False, nullable=True))
    op.add_column('reports', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.alter_column('reports', 'note',
               existing_type=sa.TEXT(),
               nullable=True)
    op.drop_column('reports', 'admin_note')
    op.drop_column('reports', 'published_datetime')
    op.drop_column('reports', 'report_datetime')
    op.drop_index(op.f('ix_reportphotos_id'), table_name='reportphotos')
    op.drop_table('reportphotos')
    op.drop_index(op.f('ix_reportaddresses_id'), table_name='reportaddresses')
    op.drop_table('reportaddresses')
    # ### end Alembic commands ###
